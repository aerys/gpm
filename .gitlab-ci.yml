stages:
  - build
  - changelog
  - source release
  - publish
  - package release

.gpm_publish_template: &gpm_publish_template
  stage: publish
  image:
    name: alpine/git:v2.40.1
    entrypoint: ["/bin/sh", "-c"]
  only:
    - tags
  resource_group: ${PACKAGE_REPOSITORY}
  before_script:
    - apk add git-lfs
    - git lfs install --skip-repo
  script:
    - cd ${PACKAGE_ARCHIVE_ROOT} && tar -zcf /tmp/${PACKAGE_NAME}.tar.gz ${PACKAGE_CONTENT} && cd -
    - mkdir -p ~/.ssh && echo -e "Host *\n  StrictHostKeyChecking no\n  IdentityFile /tmp/package-repository-key" > ~/.ssh/config
    - GIT_LFS_SKIP_SMUDGE=1 git clone ${PACKAGE_REPOSITORY} /tmp/package-repository
    - mkdir -p /tmp/package-repository/${PACKAGE_NAME}
    - mv /tmp/${PACKAGE_NAME}.tar.gz /tmp/package-repository/${PACKAGE_NAME}
    - cd /tmp/package-repository/${PACKAGE_NAME}
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git add ${PACKAGE_NAME}.tar.gz
    - git commit ${PACKAGE_NAME}.tar.gz -m "Publish ${PACKAGE_NAME} version ${PACKAGE_VERSION}."
    - git tag --cleanup=whitespace -F "${PACKAGE_CHANGELOG}" "${PACKAGE_NAME}/${PACKAGE_VERSION}"
    - git push
    - git push --tags

.github_release_template: &github_release_template
  image: alpine:3.18.3
  only:
    - tags
  dependencies:
    - changelog
  before_script:
    - apk add jq curl
  script: |
    curl --fail --retry 5 \
      -X POST \
      -H "Content-Type:application/json" \
      -H "Authorization: token ${RELEASE_AUTH_TOKEN}" \
      https://api.github.com/repos/${RELEASE_PROJECT}/releases \
      -d "$(
          jq -n \
              --arg tag_name "${RELEASE_TAG}" \
              --arg name "${RELEASE_NAME}" \
              --arg body "$(cat ${RELEASE_NOTES})" \
              '{
                  tag_name: $tag_name,
                  name: $name,
                  body: $body,
                  draft: false,
                  prerelease: false
              }'
      )"

build:linux64:
  stage: build
  tags:
    - virtualbox
  artifacts:
    expire_in: 2 hr
    paths:
      - gpm
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  script:
    - ./script/build-release.sh

build:windows64:
  stage: build
  tags:
    - windows
  artifacts:
    expire_in: 2 hr
    paths:
      - target/release/gpm.exe
  script:
    - cargo build --release

changelog:
  stage: changelog
  image: registry.aerys.in/aerys/gitlab-flow-release:0.5.0
  only:
    - tags
  variables:
    GIT_STRATEGY: none
  artifacts:
    expire_in: 2 hr
    paths:
      - CHANGELOG.md
  script:
    - gitlab-flow-release --private-token "${RELEASE_PRIVATE_TOKEN}" changelog > CHANGELOG.md

gitlab-source-release:
  stage: source release
  image: registry.aerys.in/aerys/gitlab-flow-release:0.5.0
  only:
    - tags
  variables:
    GIT_STRATEGY: none
  script:
    - gitlab-flow-release --private-token "${RELEASE_PRIVATE_TOKEN}" release

github-source-release:
  <<: *github_release_template
  stage: source release
  variables:
    RELEASE_AUTH_TOKEN: ${GITHUB_TOKEN}
    RELEASE_TAG: ${CI_COMMIT_TAG}
    RELEASE_PROJECT: aerys/gpm
    RELEASE_NAME: GPM ${CI_COMMIT_TAG}
    RELEASE_NOTES: ${CI_PROJECT_DIR}/CHANGELOG.md

publish:windows64:
  <<: *gpm_publish_template
  dependencies:
    - changelog
    - build:windows64
  variables:
    PACKAGE_VERSION: ${CI_COMMIT_TAG}
    PACKAGE_REPOSITORY: https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/aerys/gpm-packages.git
    PACKAGE_NAME: ${CI_PROJECT_NAME}-windows64
    PACKAGE_ARCHIVE_ROOT: ${CI_PROJECT_DIR}/target/release
    PACKAGE_CONTENT: gpm.exe
    PACKAGE_CHANGELOG: ${CI_PROJECT_DIR}/CHANGELOG.md

publish:linux64:
  <<: *gpm_publish_template
  dependencies:
    - changelog
    - build:linux64
  variables:
    PACKAGE_VERSION: ${CI_COMMIT_TAG}
    PACKAGE_REPOSITORY: https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/aerys/gpm-packages.git
    PACKAGE_NAME: ${CI_PROJECT_NAME}-linux64
    PACKAGE_ARCHIVE_ROOT: ${CI_PROJECT_DIR}
    PACKAGE_CONTENT: gpm
    PACKAGE_CHANGELOG: ${CI_PROJECT_DIR}/CHANGELOG.md

github-package-release:windows64:
  <<: *github_release_template
  stage: package release
  variables:
    RELEASE_AUTH_TOKEN: ${GITHUB_TOKEN}
    RELEASE_TAG: gpm-windows64/${CI_COMMIT_TAG}
    RELEASE_PROJECT: aerys/gpm-packages
    RELEASE_NAME: GPM ${CI_COMMIT_TAG} (Windows 64bit)
    RELEASE_NOTES: ${CI_PROJECT_DIR}/CHANGELOG.md

github-package-release:linux64:
  <<: *github_release_template
  stage: package release
  variables:
    RELEASE_AUTH_TOKEN: ${GITHUB_TOKEN}
    RELEASE_TAG: gpm-linux64/${CI_COMMIT_TAG}
    RELEASE_PROJECT: aerys/gpm-packages
    RELEASE_NAME: GPM ${CI_COMMIT_TAG} (Linux 64bit)
    RELEASE_NOTES: ${CI_PROJECT_DIR}/CHANGELOG.md
